
# -*- coding: utf-8 -*-

'''A Python implementation of geodesy tools for various ellipsoidal and
spherical earth models using trigonometric and vector-based methods for
geodetic (lat-/longitude) and cartesian (x/y/z) coordinates.

Transcribed from JavaScript originals by I{(C) Chris Veness 2005-2016}
and published under the same U{MIT License<https://opensource.org/licenses/MIT>}**.
For more information and further details see:

 - U{https://github.com/chrisveness/geodesy/}
 - U{http://www.movable-type.co.uk/scripts/latlong.html}
 - U{http://www.movable-type.co.uk/scripts/latlong-vincenty.html}
 - U{http://www.movable-type.co.uk/scripts/latlong-vectors.html}

Also included are conversions to and from UTM coordinates and MGRS
and OSGR grid references, see:

 - U{http://www.movable-type.co.uk/scripts/latlong-utm-mgrs.html}
 - U{http://www.movable-type.co.uk/scripts/latlong-os-gridref.html}

An additional module provides Lambert conformal conic projections
and positions, transcribed from:

 - U{https://pubs.er.USGS.gov/djvu/PP/PP_1395.pdf} pp 107-109.

All modules have been checked* statically with
U{PyChecker<https://pypi.python.org/pypi/pychecker>},
U{PyFlakes<https://pypi.python.org/pypi/pyflakes>},
U{PyCodeStyle<https://pypi.python.org/pypi/pycodestyle>} (formerly Pep8),
U{McCabe<https://pypi.python.org/pypi/mccabe>} using Python 2.7.10 and 2.7.13
and with U{Flake8<https://pypi.python.org/pypi/flake8>} on Python 3.6.0.
The tests have been run with 64-bit Python 2.6.9, 2.7.10, 2.7.13, 3.5.2, 3.5.3
and 3.6.0, but only on MacOS 10.10 Yosemite, MacOS 10.11 El Capitan and/or
MacOS 10.12.2 Sierra.

The documentation was generated by U{Epydoc<https://pypi.python.org/pypi/epydoc>}
using command line: C{epydoc --html --no-private --no-source --name=PyGeodesy --url= ... -v geodesy}.

__

*) U{PyChecker postprocessor<http://code.activestate.com/recipes/546532>}

**) U{MIT License<https://opensource.org/licenses/MIT>} text follows:

Copyright (C) 2016-2017 -- mrJean1@Gmail.com

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
'''

try:
    import datum as _  # PYCHOK expected
except ImportError:
    # extend sys.path for Python 3+ to include
    # this very directory such that all public
    # and private sub-modules can be imported
    import os, sys  # PYCHOK expected
    sys.path.insert(0, os.path.dirname(__file__))  # XXX __path__[0]
    del os, sys

# lift all public classes, constants, functions, etc. but
# only from the following sub-modules ... (see also David
# Beazley's <http://dabeaz.com/modulepackage/index.html>)
from datum import *  # PYCHOK __all__
from dms   import *  # PYCHOK __all__
from lcc   import *  # PYCHOK __all__
from mgrs  import *  # PYCHOK __all__
from osgr  import *  # PYCHOK __all__
from utils import *  # PYCHOK __all__
from utm   import *  # PYCHOK __all__
import ellipsoidalNvector  # PYCHOK false
import ellipsoidalVincenty  # PYCHOK false
import sphericalNvector  # PYCHOK false
import sphericalTrigonometry  # PYCHOK false
import nvector  # PYCHOK false
import vector3d  # PYCHOK false

VincentyError = ellipsoidalVincenty.VincentyError

# all public contants, classes and functions
__all__ = ('ellipsoidalNvector', 'ellipsoidalVincenty',
           'sphericalNvector', 'sphericalTrigonometry',
           'VincentyError',
           'nvector', 'vector3d')  # extended below
__version__ = '17.02.07'

# concat __all__ from the public classes, constants,
# functions, etc. from the sub-modules mentioned above
import datum as _datum, dms as _dms, mgrs as _mgrs, \
       utils as _utils, utm as _utm, osgr as _osgr, \
       lcc as _lcc  # PYCHOK expected
for m in (_datum, _dms, _mgrs, _osgr, _utm, _utils, _lcc):
    __all__ += m.__all__
del m, _datum, _dms, _mgrs, _osgr, _utm, _utils, _lcc
